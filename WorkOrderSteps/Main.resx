<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseApplication.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAB6RJREFUSEul
        lnlUU3cWxx9LhKIoKKigoijIJgMRDDFytIzao9WqU2eqnWqL1uPSUWu1davW47TW1r3jFBFUhEAlIkEK
        KiA7uKCyhwQSQsjGkpBUVFTE8J37EvH0/7nnfA/vvfPe73O/997fjzBDccbf36XowIHABwkJ/BqhUFCb
        liaoT08XNGRkCCTXrgmaxGKBNDtbIMvJETTfuCFoycsTKAoKBIrbtwWtRUVv1ZKTE1m0f7/Pv+zs7N8s
        bYuzPN74vD17dlfFxcnqUlIsjenpkFy9CmlmJmRZWWjJzoYiJwetN29CmZcHVX4+2gsLoS4uhqa0FJqy
        MmjLy6GtqEB7aWmfPDc3v+SHH97faG/vaAVsc3R0vrpu3Y6KU6f+qDp/HlXnzuFBfDweJSSg9sIF1F+6
        hMbLl9GUkgJpaiqaf/sNLZSEgpJozciAkhJRUiJtlIiKEmm/dQvasjKLTCx+eG3LFr4V8u/gYL+rsbF3
        Sn78EWWkiqNHcffnn3H/+HE8PHkS1adPo/bMGdSdPWsFVycnQ0LJNNN1S2Ii5BcvQpGUhFZ63kqJKCkR
        5ZUraElLGyg4ePDwCoZxZja7u/MSFy7UFu7bh5Jvv0X5wYO4c+gQ7h0+jAfff49HR46ghuANp07hmcmE
        gVevoKayNRNY/ssvUBBc+euvUFIF2giuIriKKtBECaYtW5b8KYfjwfyTYfhnuFx93rZtKN61C2Vff43K
        3btxd+9eVO3fj0cEriFwIzkcCiPVX05uFT/9BOWxY2g7cQIqSqKdXKsJrCFw4549SAgNFa7icMYyawhy
        wt9fm/vZZyj64guUbt2Kiu3bcffLL3Fnxw4Uk6oI3kjuhqKHGi4jp42UvYTKqiTHanKsIcc6AusILNm8
        Gee8vIR/Z5ixzKcEOTZpkj575UoUxsaiZP16lG/YgMqdO6G+exf9z55BRc2VkCs2BgcHYaLp6qRGWwYG
        8KK3FyqRCBpyqz9wAJ3ffYdOqkJ9VBTiGMYGiWUh48drry9ejNurVqHk449RuWUL1CUlGLRYMPj6NQw0
        rrJvvrFC2DDl5sJATX795In1fuDFC+io8R1UagNJv2gR6jgcJA5B1hHkuKenNismBgUffIDiDz+ElKaG
        dcACemtr0UKZSTdutC7Ihvn6daiph2ahEANGo9Xdc7Ua3VSu7qVLoXV3g4TjiCRHBxvkc7YnY8ZoxbNn
        o2DBAlSuWwcjLWz9UKOBlBarW7EC0jVrrM9YmWmPqD/5BDrqY29aGix9fbDQ1P2RmADdJG/oRrlA6u6K
        5OHONshGgpx2c9OLw8ORLxCghuyyLtjQsPti/nzUL1wI6bJleFZTg5cqFbrZJi9fDj3BDWvX4pVCYX2/
        r6gQnTND0eE9Bi0TPSF0d7VBthLkv66uWnFQEPIjIiChqRkK6aZNqCZwfXQ0mubORdvq1dDSM/WSJdAR
        uJPUFT0Hz7PE1vf7JY0wLopB1zQvKPwnIG2cu/AfLGQnQeJdXPRiX1/khYRA+gbClqXho49QzeWinuBN
        kZGQ83ho4/OhJrCOpkc/1Re60W54cj7e+v4reTNMKxajO3gylDOm4MqEMTbIPoJcdHLSZo4fj5s+Pqij
        Blv6+60fyWlDVQcEoCEwENLgYMjJrZLuVd7eUA8bBi1NkHb0KPSVllgT639wH6YlMTBw/dAe4Q+Rz1gb
        5BBBUjgcfaabG254eOAeNf+pTGaF9NAJWx0aijovL0g8PSEbMQJyBwe0MQw0dnbQujihY+XfMNDZaZ3E
        56JU9MwJQw8vEBp+EDKmetkgRwhyxd5em+nkhJx33kEhOdLExVndDNA+UNFY1hCggRaWkRSkdhYyzBGa
        2Tw8LSnGIG3K191dePzVZhgjpsMkCIEuegbEfhOEq1nIcYJkMIw2kz78nXSLMrwfFoYn1dW2Oj9+jC46
        3iXUg0YqUQtJPnIkdJ+vR19dna20BOlLTYIxKgTGWQEwEaBz3l+QM32icC0L+Q9BsgkiJkAOKY9URHpE
        Q/D04UNYXr60wtjd/7KjA31yudWh9RnJYjbjeXoqDKHTYAyfhp6oQJgJ0B1DWyLQR7iBhSRwOPxbDg7a
        LFo4l5RPKiaVk+oI1EUn7HPaHxY6Ov4cr3t68KKwAI/37oIhPACGIB+C+KGHemF+NwyG+VwUhUwRbmYh
        F4cPjyxydW353dERN2jhgjeQCtJ9Ui3bbCqfljaekU5mM02cmU5Y49L30c2lsviMQ9dULxhobN9C5oWh
        a34kboUHnlvKMKOZTXZ23jcn+ySXe3sP5FHzb9vbo4T6UkmqIlWTGkgyet5K/Wind7TOTtC7uqDDYxQ6
        J3gSxBuGEIJw/dEzOwSm93hoXjS386TXuA3DGWYY+x942FcuzgvyuWH59yK4vdWB01FPkpBkQQFQkNro
        Wk3SB/iji2Sga+OMIPSEz4ApMgxm/kyY5/Jg+qsAhkXzLE3L3tPH+U4+PZVhptD6b3+1jFjuzJl7yt/3
        aCI/8soFAU90cU6U6FI0X5REukxKpvsUep7CnyUSRkWKhLwIkXBWhCg1cqYoNYIrSqG/SXQfHzYjeedI
        1+1jGcaP1rX9WvlTsLY8SCz9/9FE0kjSGwcM8z/sT6kapzcnDAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="TitlePix.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>