<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseApplication.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Gns2vU/Hc6fWce8yRIAAAAASUVORK5CYII=
</value>
  </data>
</root>